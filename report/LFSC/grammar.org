Although the concrete syntax of LFSC is not terribly important we give a brief introduction to make the understanding of the examples presented later easier to understand.
LFSC implements the core language and sideconditions as S-expressions.

At the toplevel lfsc allows the following commands, and derivatives thereof. They all take a single argument.
- define: Defines a term.
- declare: Declare a type.
- program/function: is used to define sideconditions.
- check: check will simply check a the type of the provided argument.
For the term language the following symbols are used:
| Abstract Syntax | Concrete Syntax |
|-----------------+-----------------|
| \Pi x : A . B     | ! x A B         |
| A : M           | : M N           |
| \lam x : M N    | # x M N         |
| \lam x N        | \ x N           |
| let x M N       | @ x M N         |
| { S T }         | ^ S T           |

The sidecondition language directly uses the keywords marked with bold in the previous sections.
