* The in-kernel proof checker - LFSCR
:PROPERTIES:
:CUSTOM_ID: sec:implementation
:END:
In this section, we present the implementation, /lfscr/. We first describe some high-level design decisions taken
to reduce the amount of memory needed and to make the type-checking algorithm efficient. We do so in Section \ref{sec:highlevelimpl}.
In Section \ref{sec:readingimpl} we discuss how to read and format the proofs to a format appropriate for the Linux kernel.
Lastly, we go through the implementation of the type checker in Section \ref{sec:typeimpl}


** General implementation choices
:PROPERTIES:
:CUSTOM_ID: sec:highlevelimpl
:END:
In this section, we describe some general considerations for the implementation w.r.t performance.
In short, LFSCR can use normalization by evaluation with De Bruijn indices and explicit substitutions as techniques.
#+include: highlevel.org

** Reading and formatting proofs
:PROPERTIES:
:CUSTOM_ID: sec:readingimpl
:END:
#+include: reading.org

** Typechecking LFSC
:PROPERTIES:
:CUSTOM_ID: sec:typeimpl
:END:
In this section, we describe the implementation of the type-checking semantics.
We start by introducing the value representation obtained by inference and evaluation in Section \ref{sec:valimpl}.
Then we describe the Signature and Contexts in Section \ref{sec:sigimpl} and how we handle commands in \ref{sec:impl}.
We describe inference in Section \ref{sec:inferimpl}, and type checking by definitional equality in \ref{sec:checkimpl}.
Lastly, we go over the normalization process by describing reification and evaluation in Section \ref{sec:readback} and \ref{sec:eval}.


*** Values
:PROPERTIES:
:CUSTOM_ID: sec:valimpl
:END:
#+include: values.org

*** Signature and Contexts
:PROPERTIES:
:CUSTOM_ID: sec:sigimpl
:END:
#+include: context.org

*** Commands
:PROPERTIES:
:CUSTOM_ID: sec:comimpl
:END:
#+include: commands.org

*** Inferring Types
:PROPERTIES:
:CUSTOM_ID: sec:inferimpl
:END:
#+include: infer.org

*** Checking Types
:PROPERTIES:
:CUSTOM_ID: sec:checkimpl
:END:
#+include: checking.org

*** Readback (Reification)
:PROPERTIES:
:CUSTOM_ID: sec:readback
:END:
#+include: readback.org

*** Evaluation
:PROPERTIES:
:CUSTOM_ID: sec:eval
:END:
#+include: eval.org
